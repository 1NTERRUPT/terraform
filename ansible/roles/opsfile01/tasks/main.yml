---
- name: Get host variables
  include_vars:
    file: "{{ content_folder}}/opsfile01/host_vars/vars.yml"

- name: Set the hostname
  hostname:
    name: "{{ hostname }}"

- name: Put the ssh banner in place
  copy:
    src: "{{ content_folder }}/opsfile01/files/10-help-text"
    dest: /etc/update-motd.d/
    mode: +x

# Set up the user account
- name: Create {{ user_acct_name }} user account
  user:
    name: "{{ user_acct_name }}"
    password: "{{ user_acct_pwd | password_hash('sha512', password_salt ) }}"
    shell: "{{ users_shell }}"

- name: Copy content to {{ user_acct_name }} home directory
  copy:
    src: "{{ content_folder }}opsfile01/home/{{ user_acct_name }}/"
    dest: /home/{{ user_acct_name }}/

- name: Copy ssh files to {{ user_acct_name }}'s .ssh directory
  copy:
    src: "{{ content_folder }}opsfile01/home/{{ user_acct_name }}/.ssh/"
    dest: /home/{{ user_acct_name }}/.ssh/
    owner: "{{ user_acct_name }}"
    group: "{{ user_acct_name }}"
    mode: 0700

- name: Copy authorized_keys for {{ user_acct_name }}
  file:
    path: /home/{{ user_acct_name }}/.ssh/authorized_keys
    owner: "{{ user_acct_name }}"
    group: "{{ user_acct_name }}"
    state: touch
    mode: 0644

# Set up the Ops account
- name: Create {{ ops_acct_name }} user account
  user:
    name: "{{ ops_acct_name }}"
    password: "{{ ops_acct_pwd | password_hash('sha512', password_salt ) }}"
    shell: "{{ users_shell }}"

- name: Create hidden directory
  file:
    path: /home/.marco/
    state: directory
    owner: "{{ ops_acct_name }}"
    group: "{{ ops_acct_name }}"

- name: Copy malware to hidden directory
  copy:
    src: "{{ item }}"
    dest: /home/.marco/
    owner: "{{ ops_acct_name }}"
    group: "{{ ops_acct_name }}"
    mode: +x
  with_fileglob: /tmp/scenario_support/shared/malware/templates/scripts/*.sh

- name: Copy text file to hidden directory
  copy:
    src: "{{ content_folder }}shared/malware/files/malware_flag"
    dest: /home/.marco/
    owner: "{{ ops_acct_name }}"
    group: "{{ ops_acct_name }}"

- name: Create marco cron job
  cron:
    name: Run marco
    minute: "*/10"
    job: /home/.marco/marco.sh

- name: Create put cron job
  cron:
    name: Run ftpput
    minute: "12"
    hour: "*"
    job: /home/.marco/ftpput.sh

- name: Copy passwords file
  template:
    src: /tmp/scenario_support/shared/malware/templates/passwds
    dest: /home/.marco/
    owner: "{{ ops_acct_name }}"
    group: "{{ ops_acct_name }}"

- name: setup samba
  include_role:
    name: samba
  vars:
    samba_netbios_name: "{{ hostname }}"
    samba_server_string: 'Operations file server RESTRICTED USE'
    samba_workgroup: Public

    samba_load_homes: true
    samba_load_printers: false
    samba_create_varwww_symlinks: true

    samba_log: /var/log/samba.log
    samba_log_size: 60000

    samba_map_to_guest: Never

    samba_shares_root: /srv/samba
    samba_shares:

      - name: "{{ ops_acct_name }}"
        comment: "private fileshare"
        public: no
        guest_ok: no
        read_only: yes
        valid_users: "{{ ops_acct_name }}"
    samba_users:
      -
        name: "{{ ops_acct_name }}"
        password: "{{ ops_acct_pwd }}"

# Create flags for the public file share
- name: Copy public content to home directory
  copy:
    src: "{{ content_folder}}{{ hostname }}/source/ops/"
    dest: /home/ubuntu/ops/

- name: Encode operation
  shell: cat flag_source | base64 > flag
  args:
    chdir: /home/ubuntu/ops

- name: Obfuscation operation
  shell: cat pumps_msg | tr 'A-Za-z' 'N-ZA-Mn-za-m' >> wastewater.pdf
  args:
    chdir: /home/ubuntu/ops

- name: Encode operation 2
  shell: cat traffic_source | base64 >> traffic.pdf
  args:
    chdir: /home/ubuntu/ops

- name: Place ops share flags
  copy:
    src: /home/ubuntu/ops/{{ item }}
    dest: /srv/samba/ops
    remote_src: true
  with_items:
    - flag
    - wastewater.pdf
    - traffic.pdf
    - HMI_PIN.pdf
