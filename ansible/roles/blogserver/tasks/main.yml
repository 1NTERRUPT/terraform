---
- name: Get host variables
  include_vars:
    file: "{{ content_folder }}blogserver/host_vars/vars.yml"

- name: Set the hostname
  hostname:
    name: "{{ hostname }}"
  become: yes

- name: Copy static app files
  copy:
    src: "{{ content_folder }}blogserver/"
    dest: "{{ blog_directory }}"
    owner: "{{ installer_acct_name }}"
    group: "{{ installer_acct_name }}"

- name: Copy static images
  copy:
    src: "{{ content_folder }}blogserver/images"
    dest: "{{ blog_directory }}/images/"
    owner: "{{ installer_acct_name }}"
    group: "{{ installer_acct_name }}"

- name: Copy dynamic content
  template:
    src: "{{ item }}"
    dest: "{{ blog_directory }}/content/"
    owner: "{{ installer_acct_name }}"
    group: "{{ installer_acct_name }}"
  with_fileglob: "/tmp/scenario_support/blogserver/templates/*.md"

- name: Install Packages
  apt:
    name:
      - build-essential
      - npm
      - nodejs-legacy
      - git
      - mcrypt
      - nginx
    update_cache: true
    state: latest

- name: Install pm2
  npm:
    name: pm2
    global: yes
    production: yes

- name: Install Hazel wiki
  npm:
    name: hazel-wiki
    path: "{{ blog_directory }}"
  register: npm_finished

- name: Stop APP
  command: pm2 stop server.js --name app
  args:
    chdir: "{{ blog_directory }}"
  ignore_errors: yes
  become: true
  when: npm_finished.changed
  register: app_stopped

- name: Start APP
  command: pm2 start server.js --name app
  args:
    chdir: "{{ blog_directory }}"
  ignore_errors: yes
  become: true
  when: app_stopped.changed

- name: disable default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: yes

- name: Copy nginx template
  template:
    src: "{{ content_folder }}blogserver/templates/nginx.j2"
    dest: /etc/nginx/sites-enabled/{{ hostname }}

- service:
    name: nginx
    state: restarted
