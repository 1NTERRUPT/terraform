---
- name: Get host variables
  include_vars:
    file: "{{ content_folder }}corpfile01/host_vars/vars.yml"

- name: Set the hostname for {{ hostname }}
  hostname:
    name: "{{ hostname }}"
  become: yes

- name: Install packages
  apt:
    name:
      - qrencode
    update_cache: true
    state: latest

# Set up user accounts and directories
- name: Create the {{ user_acct_name }} account
  user:
    name: "{{ user_acct_name }}"
    password: "{{ user_acct_pwd | password_hash('sha512', password_salt ) }}"
    shell: "{{ users_shell }}"

- name: Copy content to the {{ user_acct_name }} home directory
  copy:
    src: "{{ content_folder }}corpfile01/home/{{ user_acct_name }}/"
    dest: /home/{{ user_acct_name }}/
    owner: "{{ user_acct_name }}"
    group: "{{ user_acct_name }}"
    mode: 0755

- name: Copy content to {{ user_acct_name }} ssh directory
  copy:
    src: "{{ content_folder }}{{ hostname }}/home/{{ user_acct_name }}/.ssh/"
    dest: /home/{{ user_acct_name}}/.ssh/
    owner: "{{ user_acct_name }}"
    group: "{{ user_acct_name }}"
    mode: 0700

- name: Create authorized_keys file for {{ user_acct_name }}
  file:
    path: /home/{{ user_acct_name }}/.ssh/authorized_keys
    owner: "{{ user_acct_name }}"
    group: "{{ user_acct_name }}"
    state: touch
    mode: 0644

- name: Create the {{ admin_acct_name }} account
  user:
    name: "{{ admin_acct_name }}"
    password: "{{ admin_acct_pwd | password_hash('sha512', password_salt ) }}"
    shell: "{{ users_shell }}"

- name: Create hidden directory
  file:
    path: /home/.marco/
    state: directory
    owner: "{{ admin_acct_name }}"
    group: "{{ admin_acct_name }}"

- name: Copy content to hidden directory
  template:
    src: "{{ item }}"
    dest: /home/.marco/
    owner: "{{ admin_acct_name }}"
    group: "{{ admin_acct_name }}"
    mode: +x
  with_fileglob: /tmp/scenario_support/shared/malware/templates/scripts/*.sh

- name: Copy text file to hidden directory
  copy:
    src: "{{ content_folder }}shared/malware/files/malware_flag"
    dest: /home/.marco/
    owner: "{{ admin_acct_name }}"
    group: "{{ admin_acct_name }}"

- name: Create marco cron job
  cron:
    name: Run marco
    minute: "*/10"
    job: /home/.marco/marco.sh

- name: Create put cron job
  cron:
    name: Run ftpput
    minute: "12"
    hour: "*"
    job: /home/.marco/ftpput.sh

- name: Copy passwords file
  template:
    src: /tmp/scenario_support/shared/malware/templates/passwds
    dest: /home/.marco/
    owner: "{{ admin_acct_name }}"
    group: "{{ admin_acct_name }}"

# Set up the file server
- name: setup samba
  include_role:
    name: samba
  vars:
    samba_netbios_name: "{{ hostname }}"
    samba_server_string: 'Welcome to the {{ company_name }} file server'
    samba_workgroup: "{{ company_nick_name }}"

    samba_load_homes: true
    samba_load_printers: false
    samba_create_varwww_symlinks: true

    samba_log: /var/log/samba.log
    samba_log_size: 60000

    samba_map_to_guest: Never

    samba_shares_root: /srv/samba
    samba_shares:
      - name: public
        comment: "public fileshare"
        public: yes
        guest_ok: yes
        read_only: yes

      - name: private
        comment: "private fileshare"
        public: yes
        guest_ok: no
        read_only: yes
        valid_users: "{{ admin_acct_name }}"
    samba_users:
      -
        name: "{{ admin_acct_name }}"
        password: "{{ admin_acct_pwd }}"

# Create flags for the public file share
- name: Copy public content to home directory
  copy:
    src: "{{ content_folder}}{{ hostname }}/source/public/"
    dest: /home/ubuntu/public/

- name: Encode operation
  shell: cat flag64_source | base64 > flag64
  args:
    chdir: /home/ubuntu/public

- name: Obfuscation operation
  shell: cat handbook_msg | tr 'A-Za-z' 'N-ZA-Mn-za-m' >> handbook.pdf
  args:
    chdir: /home/ubuntu/public

- name: Create QR code
  shell: qrencode -o cle.png "11000000.0010101100.000000000.00000000"
  args:
    chdir: /home/ubuntu/public

- name: Down Under Step 1
  shell: cat photo_msg | tr 'A-Za-z' 'N-ZA-Mn-za-m' >> lookup.jpg
  args:
    chdir: /home/ubuntu/public

- name: Down Under Step 2
  shell: cat lookup.jpg | base64 > lookup
  args:
    chdir: /home/ubuntu/public

- name: Place public share flags
  copy:
    src: /home/ubuntu/public/{{ item }}
    dest: /srv/samba/public
    remote_src: true
  with_items:
    - flag64
    - handbook.pdf
    - cle.png
    - lookup

# Create flags for the private file share
- name: Copy private content to home directory
  copy:
    src: "{{ content_folder}}{{ hostname }}/source/private/"
    dest: /home/ubuntu/private/

- name: Encode operation
  shell: cat flag_source | base64 > flag
  args:
    chdir: /home/ubuntu/private

- name: Place private share flags
  copy:
    src: /home/ubuntu/private/{{ item }}
    dest: /srv/samba/private
    remote_src: true
  with_items:
    - flag
    - clave
