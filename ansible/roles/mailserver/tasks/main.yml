---
- name: Get host variables
  include_vars:
    file: "{{ content_folder}}/mailserver/host_vars/vars.yml"

- name: Get sql variables
  include_vars:
    file: "{{ content_folder}}/mailserver/host_vars/sql_vars.yml"

- name: Set host name
  hostname:
    name: "{{ hostname }}"
  become: true

- name: Unzip the zip file
  unarchive:
    src: "{{ content_folder}}/mailserver/files/{{ mail_file }}"
    dest: /srv/

- name: Copy config file to mail directory
  template:
    src: "{{ content_folder}}/mailserver/templates/config"
    dest: /srv/{{ mail_dir }}

- name: Copy hosts file
  template:
    src: "{{ content_folder}}/mailserver/templates/hosts"
    dest: /etc/hosts
  become: yes

- name: Install iRedMail
  shell: "{{ script }}"
  args:
    chdir: /srv/{{ mail_dir }}
  become: yes

# Create the email accounts

- name: Create sql files for the mail accounts
  shell: "bash create_mail_user_SQL.sh {{ item.name }}@{{ company_domain }} {{ item.password }} > {{ item.name }}"
  args:
    chdir: /srv/{{ mail_dir }}/tools/
  become: yes
  loop: "{{ mail_acct }}"

- name: Create the mail accounts from the sql files
  shell: "mysql -u{{ mail_db_acct_name }} -p{{ mail_db_acct_pwd }} -D {{ mail_db_name }} < {{ item.name }}"
  args:
    chdir: /srv/{{ mail_dir }}/tools/
  become: true
  loop: "{{ mail_acct }}"
  ignore_errors: true

# Copy the message content the proper folders
- name: Copy SQL file(s) to {{ installer_acct_name }} home directory
  template:
    src: "{{ item }}"
    dest: /home/{{ installer_acct_name }}/
    owner: "{{ installer_acct_name }}"
    group: "{{ installer_acct_name }}"
  with_fileglob: /tmp/scenario_support/mailserver/templates/sql/*.sql

- name: Populate the Roundcube tables
  shell: "mysql -u{{ mail_db_acct_name }} -p{{ mail_db_acct_pwd }} -D {{ roundcube_db_name }} < {{ item }}"
  args:
    chdir: /home/{{ installer_acct_name }}/
  become: true
  ignore_errors: true
  with_items:
    - users.sql
    - identities.sql
    - contacts.sql

- name: Copy email files to {{ installer_acct_name }} home directory
  template:
    src: "{{ item }}"
    dest: /home/{{ installer_acct_name }}/
    owner: "{{ installer_acct_name }}"
    group: "{{ installer_acct_name }}"
  with_fileglob: "/tmp/scenario_support/mailserver/templates/email/*.eml"

# The server needs a reboot before the messages can be imported and the services
# are up
- name: Reboot the email server
  reboot:
    reboot_timeout: 3600
  become: true

- name: Import emails for {{ user_acct_name }}
  shell: "./msgimport.sh -h localhost -u {{ user_acct_name }}@{{ company_domain }} -p {{ user_acct_pwd }} -m INBOX -f /home/ubuntu/{{ item }}"
  args:
    chdir: /opt/www/roundcubemail/bin/
  become: true
  with_items:
    - ITmessage.eml
    - managerMessage.eml
    - Moving_forward.eml
    - Sent.eml
    - thiefensteinMessage.eml
