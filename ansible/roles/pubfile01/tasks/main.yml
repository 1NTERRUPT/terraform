---
- name: Get host variables
  include_vars:
    file: "{{ content_folder }}pubfile01/host_vars/vars.yml"

- name: Set the hostname
  hostname:
    name: "{{ hostname }}"
  become: yes

- name: Install software packages
  apt:
    name:
      - texlive
    update_cache: true
    state: latest

- name: Create the {{ user_acct_name }} account
  user:
    name: "{{ user_acct_name }}"
    password: "{{ user_acct_pwd | password_hash('sha512', password_salt ) }}"

- name: Create the {{ admin_acct_name }} account
  user:
    name: "{{ admin_acct_name }}"
    password: "{{ admin_acct_pwd | password_hash('sha512', password_salt ) }}"

- name: setup samba
  include_role:
    name: samba
  vars:
    samba_netbios_name: "{{ hostname }}"
    samba_server_string: 'Welcome to the {{ company_name }} public file server'
    samba_workgroup: Public

    samba_load_homes: true
    samba_load_printers: false
    samba_create_varwww_symlinks: true

    samba_log: /var/log/samba.log
    samba_log_size: 60000

    samba_map_to_guest: Never

    samba_shares_root: "{{ install_dir }}"
    samba_shares:
      - name: public
        comment: "public fileshare"
        public: yes
        guest_ok: yes
        read_only: yes

      - name: private
        comment: "private fileshare"
        public: no
        guest_ok: no
        read_only: yes
        valid_users: "{{ admin_acct_name }}"
    samba_users:
      -
        name: "{{ admin_acct_name }}"
        password: "{{ admin_acct_pwd }}"

- name: Copy the content to the {{ installer_acct_name }} home directory
  copy:
    src: "{{ content_folder }}{{hostname}}/source/"
    dest: /home/{{ installer_acct_name }}/source/

- name: Get the host's IP address
  setup:
    filter:
      - default_ipv4

- name: Populate the AUP template
  template:
    src: "{{ content_folder }}pubfile01/templates/public/wifi-aup.tex"
    dest: "/home/{{ installer_acct_name }}/"

- name: Convert tex to PDF
  command: pdflatex wifi-aup.tex
  args:
    chdir: "/home/{{ installer_acct_name}}/"

- name: Copy PDF to file server
  copy:
    src: "/home/{{ installer_acct_name }}/wifi-aup.pdf"
    dest: "{{ install_dir }}public"
    remote_src: true
  become: yes

- name: Copy public content to the file server
  copy:
    src: "/home/ubuntu/source/public/{{ item }}"
    dest: "{{ install_dir }}public"
    remote_src: true
  with_items:
    - anotherFlag.txt

- name: Rotate
  shell: cat rot13_source | tr 'A-Za-z' 'N-ZA-Mn-za-m' > rot13ntomatoes
  args:
    chdir: /home/{{ installer_acct_name }}/source/private

- name: Copy private content to the file server
  copy:
    src: "/home/ubuntu/source/private/{{ item }}"
    dest: "{{ install_dir }}private"
    remote_src: true
  with_items:
    - flag.txt
    - rot13ntomatoes
