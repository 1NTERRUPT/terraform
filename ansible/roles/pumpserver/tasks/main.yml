---
- git:
    repo: https://github.com/1NTERRUPT/water-processing
    dest: /srv/pumpserver
    force: true

- name: Get host variables
  include_vars:
    file: "{{ content_folder }}pumpserver/host_vars/vars.yml"

- name: Set the hostname
  hostname:
    name: "{{ hostname }}"
  become: yes

- name: Add our hostname to /etc/hosts
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 {{ hostname }}"
    state: present
    insertafter: EOF
    create: True

- name: Setup server permissions
  file:
    path: /srv/pumpserver/
    state: directory
    owner: "{{ installer_acct_name }}"
    group: "{{ installer_acct_name }}"
    recurse: yes

- name: Install Packages
  apt:
    name:
      - build-essential
      - mcrypt
      - nginx
      - ruby2.4
      - ruby2.4-dev
      - ruby-switch
      - sqlite3
      - libsqlite3-dev
      - liblzma-dev 
      - zlib1g-dev
    update_cache: true
    state: latest

- name: Install the gpg key for nodejs LTS
  apt_key:
    url: "http://deb.nodesource.com/gpgkey/nodesource.gpg.key"
    state: present

- name: Install the nodejs LTS repos
  apt_repository:
    repo: "deb https://deb.nodesource.com/node_10.x trusty main"
    state: present
    update_cache: yes

- name: Install the nodejs
  apt:
    name: nodejs
    state: present

- name: Set Ruby 2.4 as default
  command: ruby-switch --set ruby2.4
  become: yes

- name: Install the Ruby bundler
  apt:
    name: ruby-bundler
    update_cache: true
    state: latest
    force: true
  become: yes

- name: Really install bundler
  command: gem install bundler
  become: yes

- name: Install pumpserver
  bundler:
      state: present
      chdir: /srv/pumpserver
  become: no

- name: migrate database
  command: bundle exec rake db:migrate chdir=/srv/pumpserver
  become: no

- name: tmp clear
  command: bundle exec rake tmp:clear chdir=/srv/pumpserver
  become: no

- name: log clear
  command: bundle exec rake log:clear chdir=/srv/pumpserver
  become: no

- name: setup seed data
  command: bundle exec rake db:seed chdir=/srv/pumpserver
  become: no

- name: update cron jobs
  command: bundle exec whenever --update-crontab --set environment='development' chdir=/srv/pumpserver
  become: no

- name: disable default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: yes

- name: Copy webserver template
  template:
    src: "{{ content_folder }}{{ hostname }}/templates/nginx.j2"
    dest: /etc/nginx/sites-enabled/pumpserver

- name: Copy pump server template
  template:
    src: "{{ content_folder}}{{ hostname }}/templates/pumpserver.j2"
    dest: /etc/init/pumpserver.conf
  become: yes

- name: Restart the pump server app
  service:
    name: pumpserver
    state: restarted

- name: Restart the web server
  service:
    name: nginx
    state: restarted

- name: Create generic ops user
  user:
    name: "{{ ops_acct_name }}"
    password: "{{ ops_acct_pwd | password_hash('sha512', password_salt ) }}"

- name: Copy content to ops user home directory
  copy:
    src: "{{ content_folder }}pumpserver/home/{{ ops_acct_name }}/"
    dest: /home/{{ ops_acct_name }}/

- name: Create hidden directory
  file:
    path: /home/.marco/
    state: directory
    owner: "{{ ops_acct_name }}"
    group: "{{ ops_acct_name }}"

- name: Copy malware to hidden directory
  copy:
    src: "{{ item }}"
    dest: /home/.marco/
    owner: "{{ ops_acct_name }}"
    group: "{{ ops_acct_name }}"
    mode: +x
  with_fileglob: /tmp/scenario_support/shared/malware/templates/scripts/*.sh

- name: Create marco cron job
  cron:
    name: Run marco
    minute: "*/10"
    job: /home/.marco/marco.sh

- name: Create put cron job
  cron:
    name: Run ftpput
    minute: "12"
    hour: "*"
    job: /home/.marco/ftpput.sh
